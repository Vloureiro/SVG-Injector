html
	head
		title SVG CSS Injection Demo
		link(rel="stylesheet", href="style.css")
	body
		.container
			h1 SVG CSS Injection Demo
			#introduction.section
				h2 Introduction
				p.large SVG CSS injection is a different approach towards displaying vector imagery in HTML. The method works by including SVG information in the footer and using Javascript to parse the SVGs to generate CSS rules. Since this is a preliminary demo, I've kept the sample code light - just view source to see all the details. Read more about the advantages and use cases <a href="http://www.somerandomdude.com/2012/08/12/svg-css-injection/" target="_blank">on my blog post</a>.
				
			#demo.section
				h2 Demo
				p
					strong Note: All code is unoptimized and proof of concept. The demos are intended to communicate the method rather than the implementation.
				.sub-section
					h3 Basic SVG CSS Injection
					p Look at the original HTML/CSS source - there's no reference to these background images. The SVG injection only adds the background image&mdash;all other CSS rules still need to be created manually.
					#basic-injection.cf
						.icon.icon-ampersand 
							span.label Ampersand
						.icon.icon-aperture 
							span.label Aperture
						.icon.icon-bolt 
							span.label Bolt
						.icon.icon-brush 
							span.label Brush
						.icon.icon-cloud 
							span.label Cloud
						.icon.icon-cog 
							span.label Cog
						.icon.icon-curved-arrow 
							span.label Curved Arrow
						.icon.icon-dial 
							span.label Dial
						.icon.icon-eye 
							span.label Eye
						.icon.icon-fork 
							span.label Fork
						.icon.icon-layers 
							span.label Layers
						.icon.icon-mail 
							span.label Mail
						.icon.icon-mic 
							span.label Mic
						.icon.icon-spin 
							span.label Spin
						.icon.icon-wrench 
							span.label Wrench
				.sub-section
					h3 Modifying SVG Prior to Injection
					p The original SVG in the footer is black, but additional rules were created at load time.
					#modified-injection.cf
						.icon.icon-bolt-35d3e9 
							span.label #35d3e9 
						.icon.icon-bolt-ff9200
							span.label #ff9200 
						.icon.icon-bolt-b66dff
							span.label #b66dff 
						.icon.icon-bolt-ff006a
							span.label #ff006a 
						.icon.icon-bolt-8cdb00
							span.label #8cdb00 
				.sub-section
					h3 Rewriting CSS Rules
					p Rules can be changed on the fly by parsing SVGs and modifying the <code>fill</code> attributes
					p 
						strong Click the icon to change its color.
					#runtime-injection.cf
						.icon.icon-paperclip 
							span.label Paperclip
						
				.sub-section
					h3 Multiple SVGs in a Background
					p The <a href="https://developer.mozilla.org/en-US/docs/CSS/Multiple_backgrounds">multiple image background</a> in CSS3 pulls in multiple SVGs to generate a single rule.
					#multiple-svg-injection.cf
						.icon.icon-mail.icon-spin.icon-wrench 
							span.label Mail, Spin &amp; Wrench
									
			#code.section
				h2 Sample Code
				p The code to pull this off is pretty simple. All SVGs are added right above the <code>body</code> tag. You'll notice that I've nested the SVG (which is semantically legitimate). The top-most SVG tag is hidden by making the width and height attributes 0.
				.sub-section
					h3 HTML
					pre 
						code
							include mini-demo-code-html.html
					p Again, it's important to note that this process simply creates a <code>background-image</code> rule for each SVG node. This means that sizing, positioning, repeating, etc. needs to be handled manually.
				.sub-section
					h3 Javascript
					h4 Basic Injection
					p The Javascript parses the SVG nodes based on the selector string you pass to the class. The most basic implementation only needs the selector.
					pre
						code
							include mini-demo-code-javascript-basic.html
					h4 Modifying SVG Prior to Injection
					p Color variations can be created by passing an array of objects (icon name and array of colors) as the second parameter. The variation has the hex color appended to the base class name (Example: <code>.icon-paperclip-ff0000</code>).
					pre
						code
							include mini-demo-code-javascript-modify-colors.html
					h4 Rewriting CSS Rules
					p Rules can also be modified after load for fast alterations.
					pre
						code
							include mini-demo-code-javascript-runtime.html
					h4 Multiple SVGs in a Background
					p Multi-background rules generate a CSS selector with all icons included (Example: <code>.icon-mail.icon-spin.icon-wrench</code>).
					pre
						code
							include mini-demo-code-javascript-multiple.html

			#performance.section
				h2 Performance
				p My tests have been very positive without putting any time on optimization. This demo averages around a 9ms execution time on my laptop in Chrome/Firefox. It took your browser <span id="execution-time"></span>ms to generate 25 CSS rules.

			#best-practices.section
				h2 Best Practices
				p Basic injection is <em>fast</em>. From my tests, you would need to throw <em>hundreds</em> of SVGs in the footers to have any noticable performance issues. Creating multiple-image backgrounds with different colors begins to slow things down. 

		svg#svg-injection-container(width="0", height="0")
			svg#icon-ampersand.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/ampersand.svg
			svg#icon-aperture.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/aperture.svg
			svg#icon-bolt.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/bolt.svg
			svg#icon-brush.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/brush.svg
			svg#icon-cloud.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/cloud.svg
			svg#icon-cog.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/cog.svg
			svg#icon-curved-arrow.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/curved_arrow.svg
			svg#icon-denied.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/denied.svg
			svg#icon-dial.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/dial.svg
			svg#icon-eye.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/eye.svg
			svg#icon-fork.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/fork.svg
			svg#icon-layers.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/layers.svg
			svg#icon-mail.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/mail.svg
			svg#icon-mic.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/mic.svg
			svg#icon-paperclip.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/paperclip.svg
			svg#icon-spin.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/spin.svg
			svg#icon-wrench.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/wrench.svg
			svg#icon-x-alt.iconic(xmlns="http://www.w3.org/2000/svg")
				include svg/x_alt.svg
		script(src="svg-css-injector.js")
		script
				date1 = new Date()
				milliseconds1 = date1.getTime()
				icnzr = new Iconizer('#svg-injection-container .iconic', {'icon-bolt':['#35d3e9', '#ff9200', '#b66dff', '#ff006a', '#8cdb00']})
				icnzr.combine(['icon-mail', 'icon-spin', 'icon-wrench'], ['#b66dff', '#ff006a', '#8cdb00'])
				date2 = new Date()
				milliseconds2 = date2.getTime()
				diff=date2-date1
				document.querySelector('#execution-time').innerHTML=diff;
				var button = document.querySelector('#runtime-injection .icon').onclick = function() {
					icnzr.rewriteRule('icon-paperclip', '#'+Math.floor(Math.random()*16777215).toString(16))
				}